@model int

@{
    ViewData["Title"] = "Schedule Workout";
    // Today in yyyy-MM-dd format for the date input
    var today = DateTime.Now.ToString("yyyy-MM-dd");
}

<div class="container mt-5">

    @* 1) Error banner *@
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <h2 class="text-center mb-4">Schedule Workout with Trainer @Model</h2>

    <div class="text-center mb-4">
        <label class="form-label">Choose Training Type</label>
        <div>
            <input type="radio" id="individual" name="trainingType" value="Individual" checked />
            <label for="individual" class="me-3">Individual</label>

            <input type="radio" id="group" name="trainingType" value="Group" />
            <label for="group">Group</label>
        </div>
    </div>

    <div class="text-center mb-4">
        <label for="datePicker" class="form-label">Select a Date</label>
        <!-- 2) min="today" prevents past dates -->
        <input type="date"
               id="datePicker"
               class="form-control d-inline-block w-auto"
               min="@today"
               required />
    </div>

    <div class="text-center">
        <h4>Select a Time</h4>
        <div class="d-flex flex-wrap justify-content-center" id="timeSlots">
            <!-- JS will populate -->
        </div>
    </div>

    <form method="post"
          asp-action="Schedule"
          asp-controller="Workouts"
          class="text-center mt-4">
        <input type="hidden" name="trainerId" value="@Model" />
        <input type="hidden" name="selectedDate" id="selectedDate" />
        <input type="hidden" name="selectedTime" id="selectedTime" />
        <button type="submit" class="btn btn-primary">Confirm</button>
    </form>
</div>

@section Scripts {
<script>
    const datePicker       = document.getElementById('datePicker');
    const timeSlots        = document.getElementById('timeSlots');
    const selDateInput     = document.getElementById('selectedDate');
    const selTimeInput     = document.getElementById('selectedTime');
    const now              = new Date();

    // Whenever the date changes
    datePicker.addEventListener('change', e => {
        selDateInput.value = e.target.value;
        regenerateSlots();
    });

    // Whenever training type changes
    document.querySelectorAll('input[name="trainingType"]').forEach(radio =>
        radio.addEventListener('change', regenerateSlots)
    );

    // On page load: set today and build initial slots
    datePicker.value = "@today";
    selDateInput.value = datePicker.value;
    regenerateSlots();

    function regenerateSlots() {
        timeSlots.innerHTML = '';
        const type    = document.querySelector('input[name="trainingType"]:checked').value;
        const chosen  = new Date(datePicker.value + 'T00:00:00');
        const isToday = chosen.toDateString() === now.toDateString();

        // how we step minutes
        const step = (type === 'Group') ? 60 : 15;
        for (let h = 10; h <= 20; h++) {
            for (let m = (type === 'Group' ? 0 : 0); m < 60; m += step) {
                if (type === 'Group' && m !== 0) continue;
                const hh = String(h).padStart(2,'0'),
                      mm = String(m).padStart(2,'0'),
                      t  = `${hh}:${mm}`;

                const btn = document.createElement('button');
                btn.type      = 'button';
                btn.className = 'btn btn-outline-secondary m-1 time-btn';
                btn.textContent = t;

                // if it's today and this time is already past -> disable
                if (isToday) {
                    const slotTime = new Date(chosen);
                    slotTime.setHours(h, m, 0, 0);
                    if (slotTime < now) {
                        btn.disabled = true;
                    }
                }

                btn.addEventListener('click', () => {
                    document.querySelectorAll('.time-btn').forEach(b => b.classList.remove('btn-success'));
                    btn.classList.add('btn-success');
                    selTimeInput.value = t;
                });

                timeSlots.appendChild(btn);
            }
        }
    }
</script>
}
</script>
